# ============================
# Telegram-–±–æ—Ç
# ============================
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
from loguru import logger
from downloader import load_data, load_faiss_index, load_topic_model
from search import find_similar_documents, find_exhibitions


# ============================
# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
# ============================
DATA_PATH = "../data/processed/cleaned_dataset.csv"
INDEX_PATH = "../models/faiss_index/faiss_index.pkl"
MODEL_PATH = "../models/bertopic_model/bertopic_model.pkl"
BERT_MODEL_PATH = "../models/bert_model/fine_tuned_model"

# ============================
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
# ============================

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    logger.info("/start –∫–æ–º–∞–Ω–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞")
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –æ–ø–∏—Å–∞–Ω–∏–µ —ç–∫—Å–ø–æ–Ω–∞—Ç–∞ –∏–ª–∏ –Ω–æ–≤–æ—Å—Ç—å –∏–∑ –º–∏—Ä–∞ –∏—Å–∫—É—Å—Å—Ç–≤–∞, –∏ —è –Ω–∞–π–¥—É —Å—Ö–æ–∂–∏–µ —ç–∫—Å–ø–æ–Ω–∞—Ç—ã –∏ –≤—ã—Å—Ç–∞–≤–∫–∏.")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    logger.info("/help –∫–æ–º–∞–Ω–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞")
    await update.message.reply_text("–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —ç–∫—Å–ø–æ–Ω–∞—Ç–∞, –∏ —è –ø–æ–∫–∞–∂—É –ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /about
async def about_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    logger.info("/about –∫–æ–º–∞–Ω–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞")
    await update.message.reply_text("–≠—Ç–æ—Ç –±–æ—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç BERTopic –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å—Ö–æ–∂–∏—Ö —ç–∫—Å–ø–æ–Ω–∞—Ç–æ–≤ –∏ –≤—ã—Å—Ç–∞–≤–æ–∫.")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.message.text
    logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {query}")
    exhibits = find_similar_documents(query, topic_model, probabilities_index, df)
    print(exhibits)
    exhibitions = find_exhibitions(df)
    print(exhibitions)

    response = "üé® *–¢–æ–ø-3 —ç–∫—Å–ø–æ–Ω–∞—Ç–∞:*\n"
    for exhibit in exhibits:
        response += f"üîπ [{exhibit['name']}]({exhibit['url']})\n"
        if exhibit['authors']:
            response += f"   *–ê–≤—Ç–æ—Ä—ã*: {exhibit['authors']}\n"
        response += f"   {exhibit['description']}...\n\n"

    response += "üè∞ *–¢–æ–ø-3 –≤—ã—Å—Ç–∞–≤–∫–∏:*\n" + "\n".join(exhibitions)
    logger.info("–û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.")
    await update.message.reply_text(response, parse_mode="Markdown")


# ============================
# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
# ============================
if __name__ == "__main__":
    logger.info("–ó–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞...")
    TOKEN = "7585876266:AAHtSMHVpgIFNr2EqSg7yvBmXOwmszgPJLo"

    # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏ –º–æ–¥–µ–ª–∏ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
    df = load_data(DATA_PATH)
    topic_model = load_topic_model(MODEL_PATH)
    probabilities_index = load_faiss_index(INDEX_PATH)

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
    logger.info("Telegram-–±–æ—Ç –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É.")
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(CommandHandler("about", about_command))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()
